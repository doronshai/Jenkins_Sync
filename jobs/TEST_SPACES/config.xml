<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Servers_List</name>
          <description></description>
          <defaultValue>10.10.10.11,10.10.10.12,10.10.10.13</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.python.Python plugin="python@1.3">
      <command>#/usr/bin/python
# ========================================================
#        Generate jenkins Job for all given Servers
# ========================================================

from jenkinsapi.jenkins import *
from jenkinsapi.job import *
import os.path
import urllib2
import os

jenkisURL = Jenkins(&apos;http://52.16.252.198:8080/&apos;)

tmpStringArray = os.environ[&apos;Servers_List&apos;].split(&apos;,&apos;)

ServerNames = tmpStringArray

for server in ServerNames:
    jenkisURL.build_job(&apos;CreateASDeploymentJob&apos;, {&apos;currentJobName&apos;: server})</command>
    </hudson.plugins.python.Python>
    <hudson.tasks.Shell>
      <command>rm -rf ListOfTaskstoAdd</command>
    </hudson.tasks.Shell>
    <hudson.plugins.python.Python plugin="python@1.3">
      <command>#/usr/bin/python
# ========================================+++++++++++++++================
#        Generate Block of Referece from MultiJob to exsiting Jobs
# ========================================+++++++++++++++================

import fileinput
import re
import os

tmpStringArray = os.environ[&apos;Servers_List&apos;].split(&apos;,&apos;)
ServerNames = tmpStringArray

JobReferenceBlock = &quot;&quot;&quot;                                  
            phaseJob(&apos;Job_Name&apos;) {
                parameters {
                    propertiesFile(&apos;test.properties&apos;)
                }
            }&quot;&quot;&quot;                                         # Add a new Section to the List

for server in ServerNames:
    with open(&apos;ListOfTaskstoAdd&apos;, &apos;a&apos;) as file:          # Add a new Section to the List
        file.write(JobReferenceBlock)
        file.close
    for line in fileinput.input(&apos;ListOfTaskstoAdd&apos;,inplace=1):
        line = re.sub(&apos;Job_Name&apos;,server, line.rstrip())  # Set the correct job Name
        print(line)</command>
    </hudson.plugins.python.Python>
    <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.40">
      <scriptText>//Create a View
nestedView(&apos;project-a&apos;) {
    views {
        //Create a Nested View inside
        listView(&apos;AS Deployers&apos;) {
            //Add all jobs with AS at the begining
            jobs {   
                regex(/AS.*/)
            }
            //Add the following columns
            columns {
                status()
                weather()
                name()
                lastSuccess()
                lastFailure()
            }
        }
    }
}</scriptText>
      <usingScriptText>true</usingScriptText>
      <ignoreExisting>false</ignoreExisting>
      <removedJobAction>IGNORE</removedJobAction>
      <removedViewAction>IGNORE</removedViewAction>
      <lookupStrategy>JENKINS_ROOT</lookupStrategy>
      <additionalClasspath></additionalClasspath>
    </javaposse.jobdsl.plugin.ExecuteDslScripts>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>ListOfTaskstoAdd,ListOfServers</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>